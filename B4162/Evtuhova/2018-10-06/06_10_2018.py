#класс Растение
class  Plant:
  #свойство царство
  kingdom = "Растение"
  #метод узнать царство
  def get_kingdom(self):
    return self.kingdom
#класс Цветок, отнаследованный от класса Растения, где доступны свойства и методы класса Растение	
class Flower(Plant):
  #свойство группа
  group = "Цветок"
  #метод узнать группу
  def get_group(self):
    return self.group
  #метод подарить
  def give(self):
    print("это тебе")   
#класс Роза, отнаследованная от класса Цветок, где доступный свойства и методы класса Цветок и класса Растение
class Rose(Flower):
  #свойство имя
  name = "Роза"
  #метод узнать имя
  def get_name(self):
    return self.name
  #метод уколоться
  def hurt(self):
    print("Ой")
  #метод подарить, перегруженный от главного класса
  def give(self):
    print("эта роза тебе")  
#класс Ромашка
class Сhamomile(Flower):
  #свойство имя
  name = "Ромашка"
  #метод узнать имя
  def get_name(self):
    return self.name
  #метод гадание, вводится количество лепестков
  def guess(self, k):
    if k == 0:
      print("Не любит")
    else:
      print("Любит!")
#создать экземпляр класса Растение
p = Plant()
#узнать царство
print(p.get_kingdom())
#создать экземпляр класса Цветок
f = Flower()
#вызвать метод класса Цветок - Подарить
f.give()
#метод узнать царство, был унаследован от класса Растение
print(f.get_kingdom())
#метод получить группу
print(f.get_group())
#создать экземпляр класса Роза
r = Rose()
#метод узнать царство, был унаследован от класса Растение
print(r.get_kingdom())
#метод узнать группу, был унаследован от класса Цветок
print(r.get_group())
#метод узнать имя
print(r.get_name())
#вызвать метод класса Роза - Подарить, будет вызван именно метод класса Роза, а не цветок
r.give()
#создать экземпляр класса Роза
c = Сhamomile()
k = int(input("Количество лепестков = "))
#вызвать метод класса Ромашки - Гадание. Передаем количество лепестков
c.guess(k)
#вызвать метод Подарить. Будет вызван метод класса Цветок, от которого отнаследована Ромашка
c.give()